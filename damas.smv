--
--			P1
--	  __1___2___3___4__
--	1 |-1 |_0_|-1_|_1_| 
--	2 |_0_|-1_|_0_|-1_|
--	3 |-1_|_0_|-1_|_0_| 
--	4 |_3_|-1_|_0_|-1_| 
--			P2
--
--	Significados dos Blocos: 
--  1 	-> P1.normal
--  2 	-> P1.dama
--  3 	-> P2.normal
--  4 	-> P2.Damas
--  -1	-> Espaço Inacessível (Espaços Brancos)
--  0	-> Espaço Vazio
--
--
MODULE main
	VAR
	    tabuleiro : array 1..4 of array 1..4 of {-1, 0, 1, 2, 3, 4};
	    turno: boolean; --TRUE - J1 | FALSE - J2
	    num_pecas1: 1..8;
	    num_pecas2: 1..8;
	    linha: 1..8;
	    coluna: 1..8;

	ASSIGN
		init(turno) := TRUE;
		init(num_pecas1) := 1;
		init(num_pecas2) := 1;
			
			--INACESSÍVEIS
		init(tabuleiro[1][1]) := -1;
		init(tabuleiro[1][3]) := -1;
		
		init(tabuleiro[2][2]) := -1;
		init(tabuleiro[2][4]) := -1;

		init(tabuleiro[3][1]) := -1;
		init(tabuleiro[3][3]) := -1;
	
		init(tabuleiro[4][2]) := -1;
		init(tabuleiro[4][4]) := -1;
		init(linha) := 1;
		init(coluna) := 4;

		--P1
		--LINHA 1
		init(tabuleiro[1][2]) := 0;
		init(tabuleiro[1][4]) := 1;		

		--LINHA 2
		init(tabuleiro[2][1]) := 0;
		init(tabuleiro[2][3]) := 0;
		--FIMP1

		--P2 
		--LINHA 3
		init(tabuleiro[3][2]) := 0;
		init(tabuleiro[3][4]) := 0;		
		--LINHA 4
		init(tabuleiro[4][1]) := 3; 
		init(tabuleiro[4][3]) := 0;	
		--FIM P2	
	ASSIGN
		--ESPAÇOS BLOQUEADOS
		next(tabuleiro[1][1]) := -1;
		next(tabuleiro[1][3]) := -1;
		
		next(tabuleiro[2][2]) := -1;
		next(tabuleiro[2][4]) := -1;
		
		next(tabuleiro[3][1]) := -1;
		next(tabuleiro[3][3]) := -1;
		
		next(tabuleiro[4][2]) := -1;
		next(tabuleiro[4][4]) := -1;

		--ESPAÇOS LIVRES
		next(tabuleiro[1][4]) := 	case
									linha = 1 & coluna = 4 & (tabuleiro[1][4] = 1 & turno = TRUE) | (tabuleiro[1][4] = 4 & turno = FALSE): 0;
									TRUE: tabuleiro[1][4];
									esac;

		next(tabuleiro[1][2]) := 	case
									TRUE: tabuleiro[1][2];
									esac;


		next(tabuleiro[2][1]) := 	case

										
									TRUE: tabuleiro[1][2];
									esac;

		next(tabuleiro[2][3]) := 	case --C -> [1][2] [3][2] & [3][4]
									linha = 2 & coluna = 3 & (tabuleiro[2][3] = 1 & turno = TRUE) | (tabuleiro[2][3] = 3 & turno = FALSE): 0;
									linha = 1 & coluna = 4 & turno = TRUE & tabuleiro[1][4] = 1: 1;
									linha = 3 & coluna = 2 & turno = FALSE & tabuleiro[3][2] = 3: 3;
									linha = 3 & coluna = 4 & turno = FALSE & tabuleiro[3][4] = 3: 3;
									TRUE: tabuleiro[3][4];
									esac;

		next(tabuleiro[3][2]) :=	case

										
									TRUE: tabuleiro[1][2];
									esac;

		next(tabuleiro[3][4]) :=	case

										
									TRUE: tabuleiro[4][3];
									esac;

		next(tabuleiro[4][1]) :=	case
									linha = 4 & coluna = 1 & (tabuleiro[1][4] = 2 & turno = TRUE) | (tabuleiro[1][4] = 3 & turno = FALSE): 0;
									TRUE: tabuleiro[1][2];
									esac;

		next(tabuleiro[4][3]) :=	case

									TRUE: tabuleiro[1][2];
									esac;	

		next(linha) := 1;
		next(coluna) := 4;
		SPEC
			!EF(tabuleiro[1][4] = 0)
		